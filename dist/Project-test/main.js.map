{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashbord/dashbord.component.css","webpack:///./src/app/dashbord/dashbord.component.html","webpack:///./src/app/dashbord/dashbord.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/materail.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routing.ts","webpack:///./src/app/service/service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataService } from './service/service';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './materail';\nimport { DashbordComponent } from './dashbord/dashbord.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ROUTING } from './routing';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashbordComponent,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent,\n    RegisterComponent,\n  ],\n  imports: [\n    MaterialModule,ROUTING,BrowserAnimationsModule,\n    BrowserModule, HttpClientModule,\n    FormsModule ,\n    ReactiveFormsModule,\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  dashbord works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashbord',\n  templateUrl: './dashbord.component.html',\n  styleUrls: ['./dashbord.component.css']\n})\nexport class DashbordComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  footer works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-spacer {\\n    flex: 1 1 auto;\\n  }\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n<mat-toolbar-row>\\n  <span>TEST  APPLICATION</span>\\n  <span class=\\\"example-spacer\\\"></span>\\n  \\n  <mat-icon class=\\\"icon_value\\\">laptop</mat-icon>\\n  <span  routerLinkActive=\\\"active\\\" routerLink=\\\"login\\\" class=\\\"icon_text\\\"> Login </span>\\n\\n</mat-toolbar-row>\\n</mat-toolbar>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"login_window\\\">\\n  <div class=\\\"form_container_wrapper\\\">\\n    <mat-card>\\n      <div class=\\\"change_company_header\\\">\\n        TEST\\n        <span> LOGIN\\n          <i class=\\\"material-icons icon_postion\\\"> fingerprint </i>\\n        </span>\\n      </div>\\n\\n      <mat-form-field class=\\\"form_container\\\">\\n        <input matInput placeholder=\\\"Email\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"form_container\\\">\\n        <input matInput placeholder=\\\"Password\\\">\\n      </mat-form-field>\\n\\n      <div class=\\\"form_container_btn_wrapper\\\">\\n        <button mat-stroked-button color=\\\"primary\\\"> Login </button>\\n      </div>\\n\\n      <div class=\\\"register_text\\\" routerLinkActive=\\\"active\\\" routerLink=\\\"/singup\\\"> Create a Your account ? </div>\\n    </mat-card>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  sginup_window=false;\n  login_window=true;\n\n  sginUp(){\n    this.login_window=false;\n    this.sginup_window=true;\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n} from'@angular/material';\n\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ]\n})\nexport class MaterialModule {}\n","module.exports = \".register_btn{\\n    background: white;\\n    border: none;\\n    font-size: 15px;\\n    color: black;\\n}\"","module.exports = \"\\n<div   class=\\\"login_window\\\">\\n\\n    <div class=\\\"form_container_wrapper\\\">\\n      <mat-card [formGroup]=\\\"sginupForm\\\" novalidate>\\n          <div class=\\\"change_company_header\\\">\\n              TEST <span> REGISTER </span>\\n        </div>\\n        <mat-form-field class=\\\"form_container\\\">\\n          <input matInput  formControlName=\\\"name\\\"  placeholder=\\\"Name\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"form_container\\\">\\n            <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\n          </mat-form-field>\\n          \\n          <mat-form-field class=\\\"form_container\\\">\\n              <input matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\n            </mat-form-field>\\n\\n            <div class=\\\"form_container_btn\\\">\\n                <span routerLinkActive=\\\"active\\\" routerLink=\\\"../login\\\" > Login </span>\\n                <span>\\n                   <button  class=\\\"register_btn\\\" type=\\\"submit\\\" [disabled]=\\\"!sginupForm.valid\\\"  (click)=\\\"onSubmit()\\\" color=\\\"primary\\\">Register </button>\\n                </span>\\n            </div>\\n      </mat-card>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit, Input, Inject, HostListener } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { NgForm, FormGroup, FormArray, FormsModule, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { DataService } from'../service/service';\nimport { ViewEncapsulation } from '@angular/core';\ndeclare var jquery: any;\ndeclare var $: any;\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(\n    private formBuilder: FormBuilder, private dataService: DataService) { }\n\n  sginupForm: FormGroup;\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  private createForm() {\n    this.sginupForm = this.formBuilder.group({\n\n      name: new FormControl('', {\n        validators: [Validators.required, Validators.maxLength(55)],\n        updateOn: 'change'\n      }),\n      email: new FormControl('', {\n        validators: [Validators.required, Validators.maxLength(55)],\n        updateOn: 'change'\n      }),\n      password: new FormControl('', {\n        validators: [Validators.required, Validators.maxLength(55)],\n        updateOn: 'change'\n      }),\n    });\n  }\n\n  getError() {\n    return ' *This is required feild'\n  }\n  cancel(): void {\n    this.sginupForm.reset();\n  }\n\n  onSubmit() {\n\n    if (this.sginupForm.valid) {\n      console.log(this.sginupForm.value)\n\n      this.dataService.registerData(this.sginupForm.value).subscribe(\n        data => this.closeDialog(data),\n        err => console.log(err)\n      )}\n      this.sginupForm.reset();\n  }\n\n  closeDialog(data) {\n     console.log(data.messsage)\n  }\n}\n","import { RouterModule, Routes } from '@angular/router';\nimport { ModuleWithProviders } from '@angular/core/src/metadata/ng_module';\nimport { RegisterComponent } from './register/register.component';\nimport { DashbordComponent } from './dashbord/dashbord.component';\nimport { LoginComponent } from './login/login.component';\n\n\nexport const AppRoutes: Routes = [\n    { path: '', component: DashbordComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'singup', component: RegisterComponent },\n    { path: 'dashbord', component: DashbordComponent},\n];\n\nexport const ROUTING: ModuleWithProviders = RouterModule.forRoot(AppRoutes);","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(public http: HttpClient) { }\n\n  /* ============ Pipeline api call Url function ================ */\n  //  getList() {\n  //     return this.http.get(ApiConfig.apiUrl + '' + ApiConfig.apiPath + '' + SettingConfig.setting_get_pipeline_url);\n  // }\n  registerData(message) {\n      return this.http.post('http://localhost:8000/api/register', message);\n  }\n\n  // deletePipeline(id: any) {\n  //     // return this.http.delete( + '/' + id);\n  // }\n  // updatePipeline(id, data) {\n  //     return this.http.put( + '/' + id, data);\n  // }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}